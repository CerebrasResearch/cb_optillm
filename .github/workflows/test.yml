name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r tests/requirements.txt
    
    - name: Run unit tests
      run: |
        # Set up local inference environment
        export OPTILLM_API_KEY=optillm
        
        # Run quick CI tests
        python tests/test_ci_quick.py
        
        # Run plugin tests with pytest if available
        python -m pytest tests/test_plugins.py -v --tb=short || python tests/test_plugins.py
        
        # Run approach tests
        python tests/test_approaches.py
        
        # Run reasoning token tests (unit tests only - no MLX)
        python tests/test_reasoning_simple.py
        python tests/test_reasoning_tokens.py
        python tests/test_reasoning_integration.py
        
        # Run batching tests (MLX tests auto-skipped on Ubuntu)
        python tests/test_batching.py
        
        # Run JSON plugin tests
        python tests/test_json_plugin.py
        
        # Run n-parameter tests
        python tests/test_n_parameter.py
        
        # Run API compatibility tests with pytest if available
        python -m pytest tests/test_api_compatibility.py -v --tb=short || echo "API compatibility tests require pytest"
        
        # Run main test framework with basic tests
        python tests/test.py --approaches none --single-test "Simple Math Problem"
      env:
        OPTILLM_API_KEY: optillm

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
    # Only run integration tests on PRs from the same repository (not forks)
    # This ensures secrets are available
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run integration test with OpenAI
      if: env.OPENAI_API_KEY != ''
      run: |
        # Start OptILLM server
        python optillm.py &
        SERVER_PID=$!
        
        # Wait for server
        sleep 5
        
        # Run simple integration test
        python tests/test.py --approaches none --single-test "Simple Math Problem" --base-url http://localhost:8000/v1 --model gpt-4o-mini || true
        
        # Stop server
        kill $SERVER_PID || true
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      continue-on-error: true